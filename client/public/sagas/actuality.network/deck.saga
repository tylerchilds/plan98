When learning how to troubleshoot computers, you'll find there are virtual circles of hell.

By conquering these circles, you will acquire badges along the way. For most people, they immediately are granted the badge when they can answer yes to the following questions.

Machine Badge: Can you run the machine without buying more parts?
Kernel Badge: Can you upgrade the kernel without rebooting the machine?
Application Badge: Can you remix the app without panicking the kernel?
Screen Badge: Can you edit the screen without reloading it?
Module Badge: Can you redraw a module without reflowing it?
Content Badge: Can you make your audience laugh with less clock cycles than your competiton?

Because if you can do all that-- that's an indicator I would use to benchmark you as highly employable.

To set the bar for competition, I would like to present my collection of badges on this piece of paper.

In this deck, I will pitch you on both a build option and a buy option for the custom computers I sell on TheLanding.Page.

Now, in the spirit of transparency, I should disclose that I am ultimately selling you both the build and the buy option at the end of this deck.

For the builders.

When I first started my company, I needed to decide who my target market was.

Being a technologist myself and building a technology product, it was easy to imagine a world where I went all in on technology.

However, Technology is only one piece in a larger trivial pursuit game

Technology is at the fringes of all of those game pieces, a larger pie for total addressable market.

Early on I decided I did not want to be just any technology company. I wanted to be a Deep Technology company. The Technology that powers Technology.

When I first made this decision, there were two primary players: Microsoft and Google.

There are teams of people that can achieve the same results as these two in consulting scenarios.

Nobody else is playing the game Solo Legendary All Skulls On, if you know what I mean.

I want to build teams of people that work well together themselves.

Inside of those teams I want individuals that are made up of tiny teams ourselves.

Do you see the lowest common denominator here? Ours Elves. Thems Elves.

Everyone at this company is a builder first. We have no Santa.

We have strengths within the teams within ours elves and our teams have strengths outside thems elves.

Our success hinges on getting the right elves in the right space at the right time, that is it.

Each badge demonstrates the capabilities of growing unimaginable levels of joy from the Seeds of Svalbard.

If you have all the badges and are one distinct unit within yours elves. Great!

If you have no badges and are on a haphazard team of people with no complete set amongst yours elves, remember!

Role playing games are a grind. Life is a role playing game. These badges are merely a skill tree for a pragmatic toy computer.

What I am saying is have fun.

My sales pitch to you is, lend me your senses and follow my vision, despite our differences we are flowing in the same direction.

For the buyers.

I will wax off of my poetical waning and cut to the chase.

Building a product is expensive, time consuming, and you have to cater to the schedules and nuances of the lives of people working in creative fields and disciplines.

The end result is unpredictability when at the end of the day you do have a bottom line.

I do too. We all do. We all want to thrive.

The system I have architected is both a technical implementation and an organizational process to align the incentives of the builders and the buyers.

The secret ingredient is planting the seed together and growing the idea together.

Ideas begin as pitch decks and sales scripts, slide shows, story boards, charts, diagrams, models, diaramas, because the vision is yet to be actualized.

Teams in your organization are trained on operating systems and application across Windows to Mac to Android to iOS to Google Docs to Microsoft Excel to Apple Keynoteto Adobe Photoshop and that's before even factoring in their personal computing journey, preferences and disabilities.

As I'm name dropping all of these computer vendors and sorting them into the modern Silicon Valley stack, you have a number in your head for how expensive your technology bill is.

I cannot drop that down to zero because I am not a magician.

Though at the end of the day, your footprint can be calculated with physics. Electricity over time and space and the hardware to contain it.

Companies that have fixed costs have the most to gain by bringing their dependencies in house.

The process I have developed is for managing the software development lifecycle to continuously release features across device boundaries.

How is this possible?

The short answer.

We have one synced folder-- like Drobox, OneDrive, Google Drive, iCloud-- per person on their local device. We then can utilize that via other applications in that native context or within an entirely self contained client as a virtual computer.

The long answer.

There's a single bootstrapping file, an index of hypertext, that powers my anything from a piece of paper to a flip phone to a smart phone to a laptopto a tablet to a cyberdeck to a guitar to a car to a watch to an ear to an eye.

At the root of this index is a directory of packages and a computer to dynamically load them.

The base that this system loads itself from is a typewriter.

Have you ever wished the story itself could pop right out of the page as you read a book?

This typewriter allows us to take notes, whether for just ours elves or within teams of thems elves, as we grow our Seeds of Svalbard across time and space.

I keep saying Seeds of Svalbard, what do I mean by that?

Optionally segue into "i'm not like the other guys".

When Bill Gates sold DOS to IBM, he didn't have the rights, but once he knew he'd have the money, he'd have the money and then he'd have the rights because he knew how much the rights would cost, and he would buy it immediately.

See, much of quantum computing and the legality of computing is philosophical more than it is pragmatic.

The Arctic Seed Vault is frozen in the tundra of the Svalbard archipelago and also houses a collection code from February of 2020.

At this moment I was working at Netflix and I was working on my getting my speed running time down for creating my development environment.

I called this project my "backpack". I get a new computer, I "unpack" my backpack.

Once I found out my contributions were frozen and time and space I naturally made that a canon event in my time stream.

From this moment, I would no longer be "getting a new computer" or "building a development environment" or "punching a time sheet".

Instead, I would be "respawning".

At this point in the game, I enjoy having casual conversations at dinner parties, figuring out what people are into, then having them scan my QR codes and we'll summon elements into their imagination.

Anything that doesn't exist yet, I'll go home and build and try to impress different people at the next party.

This is what we all do, regardless of industry, regardless of background, at the end of the day, we're just trying to make our art land with the right audience.

Being able to have a cohesive story for how to take an idea on a journey through production is the secret sauce for being able to continue telling stories time and time again.

Unlike my ability to land a fifth season at Netflix, but cult classics get cancelled all the time.

So what is Deep Technology?

It is the fabric that enables ours elves to be one within thems elves.

Arthur C. Clarke's Laws

1. When a distinguished but elderly scientist states that something is possible, he is almost certainly right. When he states that something is impossible, he is very probably wrong.

2. The only way of discovering the limits of the possible is to venture a little way past them into the impossible.

3. Any sufficiently advanced technology is indistinguishable from magic.

Could I phrase this another way?

People pay a lot of money to go to Disney and live Disney as a lifestyle because the fantasy experience is fun. Pretending magic is real is fun.

I love reverse engineering rides and stories and songs and why it is we all collectively feel certain feelings when the fireworks go off above the castle.

My version of fun is by creating it to be enjoyed time and time again without me even being there, kind of like Walt has done.

So why my system?

There's a saying in computer science that the easiest way to make hardware twice as fast is to reduce the software bloat by half.

My pitch to you is that my paper didn't just make your current device twice as fast, but ten times better by unlocking new toys hidden in the chest.

Imagine what we could do with more than just my elves and if we could all stop pretending magic is not real.

See you in Svalbard and bless your elves.

-Ty

<green-monster
YOUR-MLBV3STATS-KEY: YOUR-KEY
YOUR-MLBV3PROJECTIONS-KEY: YOUR-KEY
